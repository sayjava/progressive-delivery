# This example demonstrates a Rollout using the blue-green update strategy, which contains a manual
# gate before promoting the new stack.
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: blue-green
  labels:
    app: blue-green-app
spec:
  replicas: 5
  
  # The number of old ReplicaSets to retain.
  # Defaults to 10
  revisionHistoryLimit: 2

  selector:
    matchLabels:
      app: blue-green-app
  template:
    metadata:
      labels:
        app: blue-green-app
    spec:
      containers:
        - name: blue-green
          image: app:slow
          imagePullPolicy: Never
          resources:
            requests:
              memory: 100Mi
              cpu: 10m
          ports:
            - containerPort: 3000
          env:
            - name: version
              value: slow
  
  
  # The maximum time in seconds in which a rollout must make progress during
  # an update, before it is considered to be failed
  progressDeadlineSeconds: 120

  # Whether to abort the update when ProgressDeadlineSeconds is exceeded.
  # Optional and default is false.
  progressDeadlineAbort: true
  
  strategy:
    blueGreen:
      activeService: blue-green-prod

      previewService: blue-green-preview

      autoPromotionEnabled: true

      previewReplicaCount: 2

      scaleDownDelaySeconds: 30

      prePromotionAnalysis:
        templates:
          - templateName: smoke-test-success
        args:
          - name: service-name
            value: blue-green-preview.default.svc.cluster.local
          - name: version
            value: slow

      postPromotionAnalysis:
        templates:
          - templateName: success-rate
          # - templateName: performance
          # - templateName: payload
        args:
          - name: version
            value: slow
